import sys
import os

# Add the project root directory to the Python path
project_root = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))
sys.path.insert(0, project_root)

from evm_decoder import DecoderManager

# Initialize the DecoderManager
decoder_manager = DecoderManager()

# Example transaction data
# transaction_data = {
#     'input': '0x244a7353000000000000000000000000b6a7a1d8f64fc6f984a6f3b52b7426f7b0abab5b000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001027e72f1f128130880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a5e69b75c2511d3e1c246df85646c24cbb98403100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064f3527b'
# }
from hexbytes import HexBytes
from web3.datastructures import AttributeDict

transaction_data = AttributeDict({
    'hash': HexBytes('0x7b71827fa2bc01d7e162a629d2c7e0d7322c98611599b15bbe006108af246242'),
    'nonce': 0,
    'blockHash': HexBytes('0x94ed5b98b31b9c3ad005ed8ed21918dc9608c2d6aa2e364cb9e293628600d8f5'),
    'blockNumber': 21104550,
    'transactionIndex': 123,
    'from': '0xc63e1Af05232A44E5Bd5366AEDca800830eEd645',
    'to': '0xdAC17F958D2ee523a2206206994597C13D831ec7',
    'value': 0,
    'gasPrice': 2853202283,
    'gas': 84000,
    'maxFeePerGas': 3740274927,
    'maxPriorityFeePerGas': 3353389,
    'input': '0x0162e2d000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001600000000000000000000000007a250d5630b4cf539739df2c5dacb4c659f2488d00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000033000000000000000000000000000000000000000000000000000000006728c31b0000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000038d7ea4c680000000000000000000000000000000000000000000000000000000153a5abd8f1b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000d44075c382d3ad1de74ca6e678c1be031fd829e3',
    'r': HexBytes('0x3a3b76b2366a96988e1b41871ad294031df8f80842b96f848196f796dc7196d4'),
    's': HexBytes('0x1805a3039172a453cf97c850aa6d2d3ffe7a57cc62f54126b7ec8320db233752'),
    'v': 1,
    'yParity': '0x1',
    'chainId': '0x1',
    'accessList': [],
    'type': '0x2'
})

# # Decode the transaction
result = decoder_manager.decode(transaction_data)
print("Transaction decode result:", result)
# print(result['params'][1][-1])

# Example event data
# event_data = {
#     'topics': [
#         '0x0c2a2f565c7774c59e49ef6b3c255329f4d254147e06e724d3a8569bb7bd21ad',
#         None,
#         None,
#         None
#     ],
#     'data': '0x000000000000000000000000000000000000000000000000000388f27d8d3000000000000000000000000000c68bff79073939c96c8edb1c539b5362be1f64d1'
# }


# Create the event log structure

# event_data = AttributeDict({
#     'address': '0xB53Af7e5aE3B6FdcfE861f88dDfA575e75caa012',
#     'topics': [
#         HexBytes('0xc42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca67'),
#         HexBytes('0x0000000000000000000000003fc91a3afd70395cd496c647d5a6cc9d4b2b7fad'),
#         HexBytes('0x0000000000000000000000003fc91a3afd70395cd496c647d5a6cc9d4b2b7fad')
#     ],
#     'data': '0x00000000000000000000000000000000000000000000000000001b4602970091fffffffffffffffffffffffffffffffffffffffffffffffff97777f7a8bf15fe000000000000000000000000000000000000007db293504dbe75b812221798f60000000000000000000000000000000000000000000000000e379a05b4ef3fd100000000000000000000000000000000000000000000000000000000000179aa',
#     'blockHash': HexBytes('0xdcbd04315126be61cd1db61bb347c6e81a623d8c0d291372fe3d242dae3b4059'),
#     'blockNumber': 21080987,
#     'blockTimestamp': '0x67229dcb',
#     'transactionHash': HexBytes('0xbcd88bc4841c01e8e25e5703e24850fe40c2f289da4aac89b59c233db222f130'),
#     'transactionIndex': 0,
#     'logIndex': 2,
#     'removed': False
# })

# print(type(event_data))

# # # Decode the event
# result = decoder_manager.decode(event_data)
# print("Event decode result:", result)
# print(result['args'][0])

# event_data = {
#     'topic0': '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef',
#     'topic1': '0x000000000000000000000000e82701fd630c91d35cdb923516c6a466ecdd0d05',
#     'topic2': '0x000000000000000000000000b8faa80fe04a4afd30c89f40e4fcdc6dafb274d9',
#     'data': '0x000000000000000000000000000000000000000000071f0a60a573248da706ca'
# }

# # Decode the event
# result = decoder_manager.decode(event_data)
# print("Event decode result:", result)